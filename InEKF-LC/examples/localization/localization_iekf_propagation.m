function [new_state, new_P] = localization_iekf_propagation(state, ...
    P, omega, dt, Q)
% LOCALIZATION_IEKF_PROPAGATION  不变扩展卡尔曼滤波（InEKF）的状态预测步骤
%
% 语法:
%   [new_state, new_P] = localization_iekf_propagation(state, P, omega, dt, Q)
%
% 输入参数:
%   state   - 当前状态（结构体），包含：
%             .Rot: 2x2 旋转矩阵（方向，属于 SO(2)）
%             .p:   2x1 位置向量 [x; y]
%   P       - 当前协方差矩阵（3x3），表示状态不确定性（在不变误差空间中）
%   omega   - 控制输入（结构体），包含：
%             .v:     前向线速度（m/s）
%             .gyro:  角速度（rad/s）
%   dt      - 时间步长（秒）
%   Q       - 过程噪声协方差矩阵（3x3），对应输入噪声（v, v_lat, gyro）
%
% 输出参数:
%   new_state - 预测后的状态（结构体）
%   new_P     - 预测后的协方差矩阵（3x3）
%
% 功能说明：
%   本函数实现 InEKF 的**协方差传播**，其核心思想是使用“不变误差”（invariant error）：
%     - 状态均值仍用标准非线性模型 propagate（调用 localization_f）
%     - 协方差传播使用系统对称性（如旋转不变性）设计的雅可比 F
%   相比标准 EKF，InEKF 的 F 矩阵不依赖当前状态的方向（state.Rot），仅依赖输入 omega，
%   从而提高了滤波器的鲁棒性和一致性。
%
% 注意：
%   InEKF 使用左不变误差定义：ξ = log( (X⁻¹) * X_hat )，适用于左变换不变系统。

%% 第一步：状态均值的非线性传播（与 EKF 相同）
% 使用真实带噪动力学模型进行状态预测
% w = 0 表示使用名义输入（无过程噪声）进行状态传播
new_state = localization_f(state, omega, zeros(3, 1), dt);

%% 第二步：协方差传播（基于不变性理论设计的雅可比矩阵 F）

% 初始化状态转移矩阵 F（3x3）
F = eye(3);

% 构造 SO(2) 李代数基底矩阵 J = [0 -1; 1 0]
% 用于描述方向变化对位置更新的影响
J = [0 -1;
     1  0];

% ---------------------- F 矩阵的物理含义 ------------------------
% InEKF 使用“系统矩阵”F 来传播**不变误差**的协方差。
% 与标准 EKF 不同，这里的 F 不包含 state.Rot，仅依赖控制输入 omega，
% 因此具有更好的可观测性结构和数值稳定性。

% F(2:3, 1): 方向误差如何影响位置预测？
% 在不变误差框架下，该项为 J * v * dt
% 即：航向角偏差会导致机体坐标系下的速度方向错误，进而引起位置漂移
F(2:3, 1) = J * omega.v * dt;

% F(2,3) 和 F(3,2): 位置误差如何受角速度影响？
% 当机器人旋转时，其位置在世界坐标系中也会“被动”变化
% 这两项来自于运动学的耦合关系：
%   dp_x/dθ = -p_y * dθ/dt * dt  → F(2,3) =  omega.gyro * dt
%   dp_y/dθ =  p_x * dθ/dt * dt  → F(3,2) = -omega.gyro * dt
% 注意：此处的 (2,3) 和 (3,2) 对应状态顺序 [θ, x, y]
F(2, 3) = omega.gyro * dt;   % ∂x/∂y? 实际是旋转引起的交叉项（见下文）
F(3, 2) = -omega.gyro * dt;  % ∂y/∂x?

% 注意：这里的 F 并非传统意义上的 ∂f/∂x，而是基于系统对称性的“等效系统矩阵”
%       它描述的是不变误差的动力学：dξ/dt ≈ F*ξ + G*w

%% 噪声映射矩阵 G（将输入噪声映射到状态空间）
% 假设过程噪声直接作用于输入通道，并通过 dt 积分到状态
% G = dt * I，表示所有三个噪声分量（v, v_lat, gyro）都以线性方式影响状态
G = dt * eye(3);

% ---------------------- 协方差传播公式 ------------------------
% 使用离散时间模型更新协方差：
%   P_{k+1|k} = F * P_k * F' + G * Q * G'
%
% 关键区别于标准 EKF：
%   - F 不依赖当前状态的姿态（state.Rot），只依赖 omega
%   - 因此协方差传播不受姿态大误差影响，更鲁棒
new_P = F * P * F' + G * Q * G';

% 函数结束
end