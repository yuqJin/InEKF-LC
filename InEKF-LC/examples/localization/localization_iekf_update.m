function [up_state, up_P] = localization_iekf_update(state, P, y, R)
% LOCALIZATION_IEKF_UPDATE  不变扩展卡尔曼滤波（InEKF）的测量更新步骤
%
% 语法:
%   [up_state, up_P] = localization_iekf_update(state, P, y, R)
%
% 输入参数:
%   state - 当前预测状态（结构体），包含：
%           .Rot: 2x2 旋转矩阵（方向，属于 SO(2)）
%           .p:   2x1 位置向量 [x; y]
%   P     - 当前预测协方差矩阵（3x3），表示在**不变误差空间**中的不确定性
%   y     - 实际观测值（2x1 向量），如 GPS 测量 [x_gps; y_gps]
%   R     - 观测噪声协方差矩阵（2x2），通常为 diag(gps_noise_std^2)
%
% 输出参数:
%   up_state - 更新后的状态（结构体）
%   up_P     - 更新后的协方差矩阵（3x3）
%
% 功能说明：
%   本函数实现 InEKF 的**基于左不变误差的测量更新**：
%     1. 构造观测模型的雅可比矩阵 H（在不变误差框架下）
%     2. 计算卡尔曼增益 K
%     3. 计算创新量（innovation）并用于修正状态
%     4. 使用左不变更新函数 phi 更新状态（保持几何一致性）
%     5. 更新协方差矩阵
%
% 关键思想：
%   InEKF 使用“左不变误差”定义：ξ = log( (X⁻¹) * X_hat )
%   因此观测雅可比 H 必须与该误差定义一致，其形式为：H = Rot * [0, I]
%   这保证了滤波器具有更好的可观测性匹配和一致性。

%% 构造观测模型的雅可比矩阵 H（在不变误差空间中）
% 在 InEKF 中，观测函数 h(state) = state.p 的雅可比矩阵 H
% 不是简单的 [0, I]，而是需要考虑状态所在的李群 SE(2) 的左不变结构。
%
% 正确形式为：
%   H = Rot * [0_{2×1}, I_{2×2}]
%
% 物理含义：
%   - 观测仅依赖于位置 p，但 p 是在世界坐标系中表示的
%   - 位置 p = X * [0;0]（将原点通过位姿变换到世界坐标）
%   - 对左不变误差的线性化结果引入了当前方向 Rot 的旋转作用
%
% 数学推导来源：
%   观测残差的传播受姿态不确定性影响：δp ≈ Rot * δξ_p + Rot*J*δθ * 0
%   但由于我们只观测 p，且使用左不变误差，最终 H 矩阵包含 Rot 作为加权
H = state.Rot * [zeros(2, 1), eye(2)];

% 注意：这与标准 EKF 的 H = [0, I] 不同
%      标准 EKF 使用欧氏误差，而 InEKF 使用左不变误差，导致 H 不同

% 可选：若使用右不变误差，则 H 形式不同（此处为左不变）

%% 计算测量残差的协方差（创新协方差）
% S = H * P * H' + R
% 表示“预测观测值”的不确定性，用于归一化卡尔曼增益
S = H * P * H' + R;  % 2x2 矩阵

%% 计算卡尔曼增益
% K = P * H' * S^{-1}
% 使用右除 / 等价于 P*H'*inv(S)，数值更稳定
K = P * H' / S;  % K 是 3×2 矩阵：将 2D 观测残差映射回 3D 不变误差空间

%% 计算创新量（innovation）并映射为不变误差修正量
% 首先计算观测残差：y - h(state) = y - state.p
innovation_residual = y - localization_h(state);

% 将残差通过卡尔曼增益投影为不变误差空间中的修正量 ξ（3×1 向量）
xi = K * innovation_residual;

% 此时 ξ 属于 se(2) 李代数，形式为 [δθ; δx; δy]（在机体坐标系下解释）

%% 使用左不变更新函数 phi 进行几何一致的状态修正
% 直接加法会破坏旋转矩阵的正交性
% 因此使用左不变更新：
%   X_hat ← X * exp(ξ)
%
% 对应到状态：
%   Rot ← Rot * exp(δθ)        （左乘一个小旋转）
%   p   ← p + Rot * [δx; δy]    （将位置修正从机体坐标系转到世界坐标系）
up_state = localization_left_phi(state, xi);

% 注意：localization_left_phi 实现了左作用更新，保持群结构不变

%% 更新协方差矩阵（Joseph 形式的简化版）
% 使用标准公式：
%   P ← (I - K*H) * P
%
% 优点：
%   - 形式简单
%   - 保持对称性（在数值良好时）
%
% 更鲁棒形式（可选）：
%   up_P = (eye(3)-K*H) * P * (eye(3)-K*H)' + K*R*K';
up_P = (eye(3) - K * H) * P;

% 函数结束
end